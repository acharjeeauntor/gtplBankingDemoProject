<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="45" hostname="Auntors-MacBook-Air.local" name="com.guru99BankingDemo.testCases.CustomerModuleTest" tests="46" failures="0" timestamp="2023-03-17T18:50:35 BDT" time="-1679057536.000" errors="1">
  <testcase name="appSetUp" time="-1679057536.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <error type="org.testng.TestNGException" message="
Parameter &#039;Headless&#039; is required by BeforeClass on method appSetUp but has not been marked @Optional or defined
in /Users/auntoracharja/Work/SQA/Automation/Selenium/guru99BankingDemoProject_Selenium/testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'Headless' is required by BeforeClass on method appSetUp but has not been marked @Optional or defined
in /Users/auntoracharja/Work/SQA/Automation/Selenium/guru99BankingDemoProject_Selenium/testng.xml
at org.testng.internal.Parameters.createParams(Parameters.java:268)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:356)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:301)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- appSetUp -->
  <system-out/>
  <testcase name="addCustomerUsingValidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingValidData -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="resetCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerForm -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="addCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingValidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingValidId -->
  <system-out/>
  <testcase name="resetEditCustomerIdForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetEditCustomerIdForm -->
  <system-out/>
  <testcase name="editCustomerUsingValidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingValidData -->
  <system-out/>
  <testcase name="resetCustomerDataForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetCustomerDataForm -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="nameGenderBirthDateEditable" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- nameGenderBirthDateEditable -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="editCustomerUsingInvalidData" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <system-out/>
  <testcase name="deleteCustomerUsingValidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- deleteCustomerUsingValidId -->
  <system-out/>
  <testcase name="deleteCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- deleteCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="deleteCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- deleteCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="deleteCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- deleteCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="deleteCustomerUsingInvalidId" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- deleteCustomerUsingInvalidId -->
  <system-out/>
  <testcase name="resetDeleteCustomerForm" time="0.000" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <skipped/>
  </testcase> <!-- resetDeleteCustomerForm -->
  <system-out/>
</testsuite> <!-- com.guru99BankingDemo.testCases.CustomerModuleTest -->
